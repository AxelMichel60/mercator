import{C as O,A as S,l as V,m as W,n as D,T as A,o as L,_ as y,H as C,P as N}from"./chart-Cvhnes20.js";function E(Y,e,t,o){let n=1,a=1,i=0,s=0;if(e<A){const r=Y,d=r+e,M=Math.cos(r),l=Math.sin(r),R=Math.cos(d),x=Math.sin(d),{radiusPercentage:b,widthPercentage:v,lengthPercentage:f}=o,u=Math.max(b/100,v/2/100),g=(P,w,T)=>y(P,r,d)?Math.max(1,f/100):Math.max(w,w*t,T,T*t,u),m=(P,w,T)=>y(P,r,d)?Math.min(-1,-f/100):Math.min(w,w*t,T,T*t,-u),c=g(0,M,R),h=g(C,l,x),p=m(N,M,R),_=m(N+C,l,x);n=(c-p)/2,a=(h-_)/2,i=-(c+p)/2,s=-(h+_)/2}return{ratioX:n,ratioY:a,offsetX:i,offsetY:s}}class X extends V{parse(e,t){super.parse(e,t);const o=this.getDataset(),n=this._cachedMeta;n.minValue=o.minValue||0,n.value=o.value}update(e){const t=this,o=t.chart,{chartArea:n}=o,a=t._cachedMeta,i=a.data,s=t.getMaxBorderWidth()+t.getMaxOffset(i),r=Math.max((Math.min(n.width,n.height)-s)/2,0),d=Math.min(W(t.options.cutout,r),1),M=t._getRingWeight(t.index),{circumference:l,rotation:R}=t._getRotationExtents(),{ratioX:x,ratioY:b,offsetX:v,offsetY:f}=E(R,l,d,this.options.needle),u=(n.width-s)/x,g=(n.height-s)/b,m=Math.max(Math.min(u,g)/2,0),c=D(t.options.radius,m),h=Math.max(c*d,0),p=(c-h)/t._getVisibleDatasetWeightTotal();t.offsetX=v*c,t.offsetY=f*c,a.total=t.calculateTotal(),t.outerRadius=c-p*t._getRingWeightOffset(t.index),t.innerRadius=Math.max(t.outerRadius-p*M,0),t.updateElements(i,0,i.length,e)}calculateTotal(){const e=this._cachedMeta,t=e.data;let o=0,n=e.minValue,a=e.minValue,i;for(i=0;i<t.length;i++){const s=e._parsed[i];s!==null&&!isNaN(s)&&this.chart.getDataVisibility(i)&&(s<n&&(n=s),s>a&&(a=s))}return e.minValue=n,n!==null&&!isNaN(n)&&a!==null&&!isNaN(a)&&(o=Math.abs(a-n)),o}updateElements(e,t,o,n){const a=this,i=n==="reset",s=a.chart,r=s.chartArea,M=s.options.animation,l=(r.left+r.right)/2,R=(r.top+r.bottom)/2,x=i&&M.animateScale,b=x?0:a.innerRadius,v=x?0:a.outerRadius,f=a.resolveDataElementOptions(t,n),u=a.getSharedOptions(f),g=a.includeOptions(n,u),m=a._getRotation();var c=m,h;for(t>0&&(c=a._circumference(t,i)+m),h=t;h<t+o;++h){var p=a._circumference(h,i)+m;const _=e[h],P={x:l+a.offsetX,y:R+a.offsetY,startAngle:c,endAngle:p,circumference:p-c,outerRadius:v,innerRadius:b};g&&(P.options=u||a.resolveDataElementOptions(h,n)),c=p,a.updateElement(_,h,P,n)}a.updateSharedOptions(u,n,f)}calculateCircumference(e){const t=this._cachedMeta.total,o=this._cachedMeta.minValue;if(t>0&&!isNaN(e)&&!isNaN(o)){const n=this._getCircumference(),a=o*n/A;return A*(Math.abs(e-a)/t)}return 0}getTranslation(e){const{chartArea:t}=e,o=(t.left+t.right)/2,n=(t.top+t.bottom)/2,a=o+this.offsetX||0,i=n+this.offsetY||0;return{dx:a,dy:i}}drawNeedle(){const{ctx:e,chartArea:t}=this.chart,{innerRadius:o,outerRadius:n}=this,{radiusPercentage:a,widthPercentage:i,lengthPercentage:s,color:r}=this.options.needle,d=t.right-t.left,M=a/100*d,l=i/100*d,R=s/100*(n-o)+o,{dx:x,dy:b}=this.getTranslation(this.chart),v=this._cachedMeta,f=this._getCircumference(),u=this._getRotation();var g=this.calculateCircumference(v.value*f/A)+u;e.save(),e.translate(x,b),e.rotate(g),e.fillStyle=r,e.beginPath(),e.ellipse(0,0,M,M,0,0,2*Math.PI),e.fill(),e.beginPath(),e.moveTo(0,l/2),e.lineTo(R,0),e.lineTo(0,-l/2),e.fill(),e.restore()}drawValueLabel(){if(!this.options.valueLabel.display)return;const{ctx:e,config:t,chartArea:o}=this.chart,{defaultFontFamily:n}=t.options,a=t.data.datasets[this.index],{formatter:i,fontSize:s,color:r,backgroundColor:d,borderRadius:M,padding:l,bottomMarginPercentage:R}=this.options.valueLabel,x=o.right-o.left,b=R/100*x,f=(P=>P.toFixed(0))(a.value).toString()+"%";e.textBaseline="middle",e.textAlign="center",s&&(e.font=`${s}px ${n}`);const{width:u}=e.measureText(f),g=Math.max(e.measureText("m").width,e.measureText("ï¼·").width);l.left+u/2,l.top+g/2;const m=l.left+u+l.right,c=l.top+g+l.bottom;let{dx:h,dy:p}=this.getTranslation(this.chart);const _=L(this.chart.options.rotation)%(Math.PI*2);h+=b*Math.cos(_+Math.PI/2),p+=b*Math.sin(_+Math.PI/2),e.save(),e.translate(h+s,p),e.fillStyle=d,e.fillRect(-m,-c+4,m,c-4),e.fillStyle=r||t.options.defaultFontColor,e.translate(-m/2,-c+s/2),e.fillText(f,0,g),e.restore()}draw(){super.draw(),this.drawNeedle(),this.drawValueLabel()}}X.overrides={needle:{radiusPercentage:2,widthPercentage:3.2,lengthPercentage:80,color:"rgba(0, 0, 0, 1)"},valueLabel:{fontSize:"12",display:!0,formatter:null,color:"#000000",backgroundColor:"#ffff00",borderRadius:5,padding:{top:5,right:5,bottom:5,left:5},bottomMarginPercentage:5},cutout:"50%",rotation:-90,circumference:180,plugins:{legend:{display:!1},tooltip:{enabled:!1}}};X.id="gauge";X.version="0.0.0";O.register(X,S);export{X as G};
